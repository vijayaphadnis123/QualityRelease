name: Azure Pipelines
variables:
  python.version: '3.7.6'
  webAppName: 'QualityRelease-AppService'
  azureServiceConnectionId: 'github.com_vijayaphadnis123'
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      name: Hosted Ubuntu 1604
    steps:
    # Needed for Terraform VM deployment
    # - task: InstallSSHKey@0
    #  inputs:
    #  knownHostsEntry: 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
    #'
    #  sshPublicKey: 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDN0ml7qOhwQHzFeJYP5s98F/pTJwLQs8fGgiWjWmo42nzOzIOK+25sf+zEc/FGBjQlJB25j8WKu87n8thhr8p8YXjTQi0zjs1jfW8L67ZGujE/ohMfcDqO6bp+ehwBg4BVHJnP43tyrVvOVYtdp0YyHzPuP18lvQinbc5KlCoTM0xsQgKXV8dYRgk9OdG5WvzvTHVR1isFVGL4gUgpFC1KVX4jVWnqfUOtCtEob1sJ9nww8n0OYPpaxrYs8kxLF7/92MhuWuIab+t5rGhxpPsXpZ4l0Kooif5OLGyYtxc9Wfwz2LJLg/caCPDV64KNG8icxYRM39wGszPI3OGTHHmXRpVM4fB8Ep68JJvGw/NplDJQBGFvCeiUSJWc3VVbd6OY2jyYYET4w1KUtEebunEa8k15Fc8alWYrmCdl3OzpZFgh51A/XGWHO3kZ0nevBVaFEFmGlGIywLYwsXm2rkQ8DpXepc0eXUVwo3h9IIuKrP2t9no0L2AjCZRzYaF+ISc= vijay@LAPTOP-P2S8IFB7'
    #  sshKeySecureFile: 'id_rsa'
 
    # - task: TerraformInstaller@0
    #   displayName: 'Use Terraform latest'
     #  inputs: 
     #    terraformVersion: 1.0.0
     
     - task: TerraformCLI@0
       displayName: Terraform Initialize
       inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: './terraform'
          backendServiceArm: 'Azure Subscription 1(76b1e36a-6202-4055-914a-1618f6c3575e)'
          backendAzureRmResourceGroupName: 'MyResGroup1'
          backendAzureRmStorageAccountName: 'udaqualityrelease'
          backendAzureRmContainerName: 'tfstate'
          backendAzureRmKey: 'prod.terraform.tfstate'  
          allowTelemetryCollection: true
     
     - task:  TerraformCLI@0
       displayName: Terraform plan
       inputs:
          command: 'plan'
          workingDirectory: './terraform'
      
     - task:  TerraformCLI@0
       displayName: Terraform Apply
       inputs:
          command: 'apply'
          workingDirectory: './terraform'
          backendType: azurerm
          allowTelemetryCollection: true

 
